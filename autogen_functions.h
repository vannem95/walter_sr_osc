/* This file was automatically generated by CasADi 3.6.7.
 *  It consists of: 
 *   1) content generated by CasADi runtime: not copyrighted
 *   2) template code copied from CasADi source: permissively licensed (MIT-0)
 *   3) user code: owned by the user
 *
 */
#ifndef casadi_real
#define casadi_real double
#endif

#ifndef casadi_int
#define casadi_int long long int
#endif

extern "C" int beq(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem);
extern "C" int beq_alloc_mem(void);
extern "C" int beq_init_mem(int mem);
extern "C" void beq_free_mem(int mem);
extern "C" int beq_checkout(void);
extern "C" void beq_release(int mem);
extern "C" void beq_incref(void);
extern "C" void beq_decref(void);
extern "C" casadi_int beq_n_in(void);
extern "C" casadi_int beq_n_out(void);
extern "C" casadi_real beq_default_in(casadi_int i);
extern "C" const char* beq_name_in(casadi_int i);
extern "C" const char* beq_name_out(casadi_int i);
extern "C" const casadi_int* beq_sparsity_in(casadi_int i);
extern "C" const casadi_int* beq_sparsity_out(casadi_int i);
extern "C" int beq_work(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w);
extern "C" int beq_work_bytes(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w);
#define beq_SZ_ARG 7
#define beq_SZ_RES 2
#define beq_SZ_IW 0
#define beq_SZ_W 662
extern "C" int Aeq(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem);
extern "C" int Aeq_alloc_mem(void);
extern "C" int Aeq_init_mem(int mem);
extern "C" void Aeq_free_mem(int mem);
extern "C" int Aeq_checkout(void);
extern "C" void Aeq_release(int mem);
extern "C" void Aeq_incref(void);
extern "C" void Aeq_decref(void);
extern "C" casadi_int Aeq_n_in(void);
extern "C" casadi_int Aeq_n_out(void);
extern "C" casadi_real Aeq_default_in(casadi_int i);
extern "C" const char* Aeq_name_in(casadi_int i);
extern "C" const char* Aeq_name_out(casadi_int i);
extern "C" const casadi_int* Aeq_sparsity_in(casadi_int i);
extern "C" const casadi_int* Aeq_sparsity_out(casadi_int i);
extern "C" int Aeq_work(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w);
extern "C" int Aeq_work_bytes(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w);
#define Aeq_SZ_ARG 7
#define Aeq_SZ_RES 2
#define Aeq_SZ_IW 47
#define Aeq_SZ_W 3067
extern "C" int bineq(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem);
extern "C" int bineq_alloc_mem(void);
extern "C" int bineq_init_mem(int mem);
extern "C" void bineq_free_mem(int mem);
extern "C" int bineq_checkout(void);
extern "C" void bineq_release(int mem);
extern "C" void bineq_incref(void);
extern "C" void bineq_decref(void);
extern "C" casadi_int bineq_n_in(void);
extern "C" casadi_int bineq_n_out(void);
extern "C" casadi_real bineq_default_in(casadi_int i);
extern "C" const char* bineq_name_in(casadi_int i);
extern "C" const char* bineq_name_out(casadi_int i);
extern "C" const casadi_int* bineq_sparsity_in(casadi_int i);
extern "C" const casadi_int* bineq_sparsity_out(casadi_int i);
extern "C" int bineq_work(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w);
extern "C" int bineq_work_bytes(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w);
#define bineq_SZ_ARG 33
#define bineq_SZ_RES 9
#define bineq_SZ_IW 0
#define bineq_SZ_W 114
extern "C" int Aineq(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem);
extern "C" int Aineq_alloc_mem(void);
extern "C" int Aineq_init_mem(int mem);
extern "C" void Aineq_free_mem(int mem);
extern "C" int Aineq_checkout(void);
extern "C" void Aineq_release(int mem);
extern "C" void Aineq_incref(void);
extern "C" void Aineq_decref(void);
extern "C" casadi_int Aineq_n_in(void);
extern "C" casadi_int Aineq_n_out(void);
extern "C" casadi_real Aineq_default_in(casadi_int i);
extern "C" const char* Aineq_name_in(casadi_int i);
extern "C" const char* Aineq_name_out(casadi_int i);
extern "C" const casadi_int* Aineq_sparsity_in(casadi_int i);
extern "C" const casadi_int* Aineq_sparsity_out(casadi_int i);
extern "C" int Aineq_work(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w);
extern "C" int Aineq_work_bytes(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w);
#define Aineq_SZ_ARG 33
#define Aineq_SZ_RES 9
#define Aineq_SZ_IW 47
#define Aineq_SZ_W 1776
extern "C" int H(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem);
extern "C" int H_alloc_mem(void);
extern "C" int H_init_mem(int mem);
extern "C" void H_free_mem(int mem);
extern "C" int H_checkout(void);
extern "C" void H_release(int mem);
extern "C" void H_incref(void);
extern "C" void H_decref(void);
extern "C" casadi_int H_n_in(void);
extern "C" casadi_int H_n_out(void);
extern "C" casadi_real H_default_in(casadi_int i);
extern "C" const char* H_name_in(casadi_int i);
extern "C" const char* H_name_out(casadi_int i);
extern "C" const casadi_int* H_sparsity_in(casadi_int i);
extern "C" const casadi_int* H_sparsity_out(casadi_int i);
extern "C" int H_work(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w);
extern "C" int H_work_bytes(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w);
#define H_SZ_ARG 22
#define H_SZ_RES 10
#define H_SZ_IW 47
#define H_SZ_W 4477
extern "C" int f(const casadi_real** arg, casadi_real** res, casadi_int* iw, casadi_real* w, int mem);
extern "C" int f_alloc_mem(void);
extern "C" int f_init_mem(int mem);
extern "C" void f_free_mem(int mem);
extern "C" int f_checkout(void);
extern "C" void f_release(int mem);
extern "C" void f_incref(void);
extern "C" void f_decref(void);
extern "C" casadi_int f_n_in(void);
extern "C" casadi_int f_n_out(void);
extern "C" casadi_real f_default_in(casadi_int i);
extern "C" const char* f_name_in(casadi_int i);
extern "C" const char* f_name_out(casadi_int i);
extern "C" const casadi_int* f_sparsity_in(casadi_int i);
extern "C" const casadi_int* f_sparsity_out(casadi_int i);
extern "C" int f_work(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w);
extern "C" int f_work_bytes(casadi_int *sz_arg, casadi_int* sz_res, casadi_int *sz_iw, casadi_int *sz_w);
#define f_SZ_ARG 22
#define f_SZ_RES 10
#define f_SZ_IW 0
#define f_SZ_W 2000
